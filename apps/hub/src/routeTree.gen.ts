/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as protectedProfileIndexRouteImport } from './routes/(protected)/profile/index'
import { Route as protectedChatIndexRouteImport } from './routes/(protected)/chat/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedProfileIndexRoute = protectedProfileIndexRouteImport.update({
  id: '/(protected)/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedChatIndexRoute = protectedChatIndexRouteImport.update({
  id: '/(protected)/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/chat': typeof protectedChatIndexRoute
  '/profile': typeof protectedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/chat': typeof protectedChatIndexRoute
  '/profile': typeof protectedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/': typeof AuthIndexRoute
  '/(protected)/chat/': typeof protectedChatIndexRoute
  '/(protected)/profile/': typeof protectedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/chat' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/chat' | '/profile'
  id:
    | '__root__'
    | '/'
    | '/auth/'
    | '/(protected)/chat/'
    | '/(protected)/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  protectedChatIndexRoute: typeof protectedChatIndexRoute
  protectedProfileIndexRoute: typeof protectedProfileIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/chat/': {
      id: '/(protected)/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof protectedChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/profile/': {
      id: '/(protected)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof protectedProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/auth/index' {
  const createFileRoute: CreateFileRoute<
    '/auth/',
    FileRoutesByPath['/auth/']['parentRoute'],
    FileRoutesByPath['/auth/']['id'],
    FileRoutesByPath['/auth/']['path'],
    FileRoutesByPath['/auth/']['fullPath']
  >
}
declare module './routes/(protected)/chat/index' {
  const createFileRoute: CreateFileRoute<
    '/(protected)/chat/',
    FileRoutesByPath['/(protected)/chat/']['parentRoute'],
    FileRoutesByPath['/(protected)/chat/']['id'],
    FileRoutesByPath['/(protected)/chat/']['path'],
    FileRoutesByPath['/(protected)/chat/']['fullPath']
  >
}
declare module './routes/(protected)/profile/index' {
  const createFileRoute: CreateFileRoute<
    '/(protected)/profile/',
    FileRoutesByPath['/(protected)/profile/']['parentRoute'],
    FileRoutesByPath['/(protected)/profile/']['id'],
    FileRoutesByPath['/(protected)/profile/']['path'],
    FileRoutesByPath['/(protected)/profile/']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  protectedChatIndexRoute: protectedChatIndexRoute,
  protectedProfileIndexRoute: protectedProfileIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as ProtectedProfileIndexRouteImport } from './routes/_protected/profile/index'
import { Route as ProtectedChatIndexRouteImport } from './routes/_protected/chat/index'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedProfileIndexRoute = ProtectedProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedChatIndexRoute = ProtectedChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/chat': typeof ProtectedChatIndexRoute
  '/profile': typeof ProtectedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/chat': typeof ProtectedChatIndexRoute
  '/profile': typeof ProtectedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/auth/': typeof AuthIndexRoute
  '/_protected/chat/': typeof ProtectedChatIndexRoute
  '/_protected/profile/': typeof ProtectedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/auth' | '/chat' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/auth' | '/chat' | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/auth/'
    | '/_protected/chat/'
    | '/_protected/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/chat/': {
      id: '/_protected/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ProtectedChatIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/profile/': {
      id: '/_protected/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/_protected' {
  const createFileRoute: CreateFileRoute<
    '/_protected',
    FileRoutesByPath['/_protected']['parentRoute'],
    FileRoutesByPath['/_protected']['id'],
    FileRoutesByPath['/_protected']['path'],
    FileRoutesByPath['/_protected']['fullPath']
  >
}
declare module './routes/auth/index' {
  const createFileRoute: CreateFileRoute<
    '/auth/',
    FileRoutesByPath['/auth/']['parentRoute'],
    FileRoutesByPath['/auth/']['id'],
    FileRoutesByPath['/auth/']['path'],
    FileRoutesByPath['/auth/']['fullPath']
  >
}
declare module './routes/_protected/chat/index' {
  const createFileRoute: CreateFileRoute<
    '/_protected/chat/',
    FileRoutesByPath['/_protected/chat/']['parentRoute'],
    FileRoutesByPath['/_protected/chat/']['id'],
    FileRoutesByPath['/_protected/chat/']['path'],
    FileRoutesByPath['/_protected/chat/']['fullPath']
  >
}
declare module './routes/_protected/profile/index' {
  const createFileRoute: CreateFileRoute<
    '/_protected/profile/',
    FileRoutesByPath['/_protected/profile/']['parentRoute'],
    FileRoutesByPath['/_protected/profile/']['id'],
    FileRoutesByPath['/_protected/profile/']['path'],
    FileRoutesByPath['/_protected/profile/']['fullPath']
  >
}

interface ProtectedRouteChildren {
  ProtectedChatIndexRoute: typeof ProtectedChatIndexRoute
  ProtectedProfileIndexRoute: typeof ProtectedProfileIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedChatIndexRoute: ProtectedChatIndexRoute,
  ProtectedProfileIndexRoute: ProtectedProfileIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
